// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/LinkinStars/go-scaffold/logger"
	"github.com/LinkinStars/golang-web-template/internal/base/conf"
	"github.com/LinkinStars/golang-web-template/internal/base/server"
	"github.com/LinkinStars/golang-web-template/internal/biz"
	"github.com/LinkinStars/golang-web-template/internal/controller"
	"github.com/LinkinStars/golang-web-template/internal/data"
	"github.com/LinkinStars/golang-web-template/internal/router"
)

// Injectors from wire.go:

// initApp init admin application.
func initApp(confServer *conf.Server, confData *conf.Data, loggerLogger logger.Logger) (*App, func(), error) {
	engine := data.NewDB(confData)
	dataData, cleanup, err := data.NewData(confData, loggerLogger, engine)
	if err != nil {
		return nil, nil, err
	}
	userRepo := data.NewUserRepo(dataData, loggerLogger)
	userUseCase := biz.NewUserUseCase(userRepo, loggerLogger)
	userController := controller.NewUserController(userUseCase, loggerLogger)
	userRoute := router.NewUserRoute(userController)
	ginEngine := server.NewHTTPServer(confServer, loggerLogger, userRoute)
	app := newApp(loggerLogger, ginEngine)
	return app, func() {
		cleanup()
	}, nil
}
